{
  "snippets": "[\n\t/// Environments\n\t{trigger: \"mk\", replacement: \"$$0$\", options: \"tA\"},\n\t{trigger: \"dm\", replacement: \"$$\\n$0\\n$$\", options: \"tAw\"},\n\n\t{trigger: \"beg\", replacement: \"\\\\begin{$0}\\n$1\\n\\\\end{$0}\", options: \"mA\"},\n\t{trigger: \"pmat\", replacement: \"\\\\begin{pmatrix}\\n$0\\n\\\\end{pmatrix}\", options: \"mA\"},\n\t{trigger: \"bmat\", replacement: \"\\\\begin{bmatrix}\\n$0\\n\\\\end{bmatrix}\", options: \"mA\"},\n\t{trigger: \"Bmat\", replacement: \"\\\\begin{Bmatrix}\\n$0\\n\\\\end{Bmatrix}\", options: \"mA\"},\n\t{trigger: \"vmat\", replacement: \"\\\\begin{vmatrix}\\n$0\\n\\\\end{vmatrix}\", options: \"mA\"},\n\t{trigger: \"Vmat\", replacement: \"\\\\begin{Vmatrix}\\n$0\\n\\\\end{Vmatrix}\", options: \"mA\"},\n\t{trigger: \"case\", replacement: \"\\\\begin{cases}\\n$0\\n\\\\end{cases}\", options: \"mA\"},\n\t{trigger: \"align\", replacement: \"\\\\begin{align}\\n$0\\n\\\\end{align}\", options: \"mA\"},\n\t{trigger: \"array\", replacement: \"\\\\begin{array}\\n$0\\n\\\\end{array}\", options: \"mA\"},\n\t{trigger: \"matrix\", replacement: \"\\\\begin{matrix}\\n$0\\n\\\\end{matrix}\", options: \"mA\"},\n\n\n    /// Autoformat\n    // Insert space before operators\n    {trigger: \"(?<=[A-Za-z0-9)\\\\]}|%])(\\\\+|-|${COMPARE})\", replacement: \" [[0]]$0\", options: \"rmA\"},\n\n    // Insert space after greek letters and symbols\n\t{trigger: \"\\\\\\\\(${GREEK}|${SYMBOL}|${SHORT_SYMBOL})([A-Za-z0-9])\", replacement: \"\\\\[[0]] [[1]]\", options: \"rmA\"},\n    // Insert space after +-\n    {trigger: \"(?<!,|langle|${COMPARE}) ([+-])([A-Za-z0-9|@$:/\\\\\\\\])\", replacement: \" [[0]] [[1]]\", options: \"rmA\"},\n    // Insert space after comma or comparators\n    {trigger: \"(,|${COMPARE})([A-Za-z0-9<|@$:\\\\\\\\+-/])\", replacement: \"[[0]] [[1]]\", options: \"rmA\", priority: -1},\n    // Insert space after trig funcs\n    // Skip letter \"h\" to allow sinh, cosh, etc.\n\t{trigger: \"\\\\\\\\(arcsin|arccos|arctan|sin|cos|tan|cot|csc|sec)([A-Za-gi-z])\", replacement: \"\\\\[[0]] [[1]]\", options: \"rmA\"},\n    // Insert space after hyperbolic trig funcs\n    {trigger: \"\\\\\\\\(sinh|cosh|tanh|coth|csch|sech)([A-Za-z])\", replacement: \"\\\\[[0]] [[1]]\", options: \"rmA\"},\n\n    \n    /// Left-associative operations\n    {trigger: \"([a-zA-Z])bar\", replacement: \"\\\\bar{[[0]]}\", options: \"rmA\"},\n    {trigger: \"([a-zA-Z])ovl\", replacement: \"\\\\overline{[[0]]}\", options: \"rmA\"},\n    {trigger: \"([a-zA-Z])ovs\", replacement: \"\\\\overset{$0}{[[0]]}$1\", options: \"rmA\"},\n\t{trigger: \"([a-zA-Z])hat\", replacement: \"\\\\hat{[[0]]}\", options: \"rmA\"},\n\t{trigger: \"([a-zA-Z])ddot\", replacement: \"\\\\ddot{[[0]]}\", options: \"rmA\", priority: 1},\n\t{trigger: \"([a-zA-Z])dot\", replacement: \"\\\\dot{[[0]]}\", options: \"rmA\"},\n\t{trigger: \"([a-zA-Z0])vec\", replacement: \"\\\\vec{[[0]]}\", options: \"rmA\"},\n\t{trigger: \"([a-zA-Z])tilde\", replacement: \"\\\\tilde{[[0]]}\", options: \"rmA\"},\n\t{trigger: \"([a-zA-Z])und\", replacement: \"\\\\underline{[[0]]}\", options: \"rmA\"},\n\t{trigger: \"\\\\\\\\(${GREEK}) bar\", replacement: \"\\\\bar{\\\\[[0]]}\", options: \"rmA\"},\n\t{trigger: \"\\\\\\\\(${GREEK}) ovl\", replacement: \"\\\\overline{\\\\[[0]]}\", options: \"rmA\"},\n\t{trigger: \"\\\\\\\\(${GREEK}) ovs\", replacement: \"\\\\overset{$0}{\\\\[[0]]}$1\", options: \"rmA\"},\n\t{trigger: \"\\\\\\\\(${GREEK}) hat\", replacement: \"\\\\hat{\\\\[[0]]}\", options: \"rmA\"},\n\t{trigger: \"\\\\\\\\(${GREEK}) ddot\", replacement: \"\\\\ddot{\\\\[[0]]}\", options: \"rmA\", priority: 1},\n\t{trigger: \"\\\\\\\\(${GREEK}) dot\", replacement: \"\\\\dot{\\\\[[0]]}\", options: \"rmA\"},\n\t{trigger: \"\\\\\\\\(${GREEK}) vec\", replacement: \"\\\\vec{\\\\[[0]]}\", options: \"rmA\"},\n\t{trigger: \"\\\\\\\\(${GREEK}) tilde\", replacement: \"\\\\tilde{\\\\[[0]]}\", options: \"rmA\"},\n\t{trigger: \"\\\\\\\\(${GREEK}) und\", replacement: \"\\\\underline{\\\\[[0]]}\", options: \"rmA\"},\n\n    {trigger: \"([a-zA-Z]),\\\\.\", replacement: \"\\\\mathbf{[[0]]}\", options: \"rmA\"},\n\t{trigger: \"([a-zA-Z])\\\\.,\", replacement: \"\\\\mathbf{[[0]]}\", options: \"rmA\"},\n\t{trigger: \"\\\\\\\\(${GREEK}),\\\\.\", replacement: \"\\\\boldsymbol{\\\\[[0]]}\", options: \"rmA\"},\n\t{trigger: \"\\\\\\\\(${GREEK})\\\\.,\", replacement: \"\\\\boldsymbol{\\\\[[0]]}\", options: \"rmA\"},\n\n    // Subscript & superscript\n\t{trigger: \" ?sb\", replacement: \"_{$0}$1\", options: \"rmA\"},\n\t{trigger: \" ?ste\", replacement: \"_\\\\text{$0}$1\", options: \"rmA\"},\n\t{trigger: \" ?sp\", replacement: \"^{$0}$1\", options: \"rmA\"},\n\t{trigger: \" ?sq\", replacement: \"^2\", options: \"rmA\"},\n\t{trigger: \" ?cb\", replacement: \"^3\", options: \"rmA\"},\n\t{trigger: \" ?conj\", replacement: \"^*\", options: \"rmA\"},\n\n    // Auto letter subscript\n\t{trigger: \"((?<!\\\\\\\\\\\\w*)[A-Za-z]|(?<=\\\\\\\\)(${GREEK}|${SUBSCRIPTABLE}))(\\\\d)\", replacement: \"[[0]]_[[2]]\", options: \"rmA\", priority: -2},\n\t{trigger: \"([A-Za-z])_(\\\\d\\\\d)\", replacement: \"[[0]]_{[[1]]}\", options: \"rmA\"},\n\t{trigger: \"\\\\\\\\hat{([A-Za-z])}(\\\\d)\", replacement: \"\\\\hat{[[0]]}_{[[1]]}\", options: \"rmA\"},\n\t{trigger: \"\\\\\\\\mathbf{([A-Za-z])}(\\\\d)\", replacement: \"\\\\mathbf{[[0]]}_{[[1]]}\", options: \"rmA\"},\n\t{trigger: \"\\\\\\\\vec{([A-Za-z])}(\\\\d)\", replacement: \"\\\\vec{[[0]]}_{[[1]]}\", options: \"rmA\"},\n\n\n\t/// Right-associative operations\n\t{trigger: \"te\", replacement: \"\\\\text{$0}$1\", options: \"mA\"},\n\t{trigger: \"sr\", replacement: \"\\\\sqrt{$0}$1\", options: \"mA\"},\n    {trigger: \"rt(\\\\d)\", replacement: \"\\\\sqrt[[[0]]]{$0}$1\", options: \"rmA\"},\n\t{trigger: \"//\", replacement: \"\\\\frac{$0}{$1}$2\", options: \"mA\"},\n\t{trigger: \"ee\", replacement: \"e^{$0}$1\", options: \"mA\"},\n\t{trigger: \"rm\", replacement: \"\\\\mathrm{$0}$1\", options: \"mA\"},\n\n    // Modifiers\n\t{trigger: \"bar\", replacement: \"\\\\bar{$0}$1\", options: \"mA\"},\n    {trigger: \"ovl\", replacement: \"\\\\overline{$0}$1\", options: \"mA\"},\n\t{trigger: \"hat\", replacement: \"\\\\hat{$0}$1\", options: \"mA\"},\n\t{trigger: \"dot\", replacement: \"\\\\dot{$0}$1\", options: \"mA\"},\n\t{trigger: \"ddot\", replacement: \"\\\\ddot{$0}$1\", options: \"mA\", priority: 2},\n\t{trigger: \"vec\", replacement: \"\\\\vec{$0}$1\", options: \"mA\"},\n\t{trigger: \"tilde\", replacement: \"\\\\tilde{$0}$1\", options: \"mA\"},\n\t{trigger: \"und\", replacement: \"\\\\underline{$0}$1\", options: \"mA\"},\n\n\t// Brackets\n    // For dm tabout\n    {trigger: \"(\", replacement: \"($0)$1\", options: \"mA\"},\n    {trigger: \"[\", replacement: \"[$0]$1\", options: \"mA\"},\n    {trigger: \"{\", replacement: \"{$0}$1\", options: \"mA\"},\n    {trigger: \"(?<!,|${COMPARE}) ([+-])\\\\(\", replacement: \" [[0]] ($0)$1\", options: \"rmA\", priority: 1},\n    {trigger: \"(?<!,|${COMPARE}) ([+-])\\\\[\", replacement: \" [[0]] [$0]$1\", options: \"rmA\", priority: 1},\n    {trigger: \"(?<!,|${COMPARE}) ([+-]){\", replacement: \" [[0]] {$0}$1\", options: \"rmA\", priority: 1},\n    {trigger: \"(,|${COMPARE})\\\\(\", replacement: \"[[0]] ($0)$1\", options: \"rmA\", priority: 1},\n    {trigger: \"(,|${COMPARE})\\\\[\", replacement: \"[[0]] [$0]$1\", options: \"rmA\", priority: 1},\n    {trigger: \"(,|${COMPARE}){\", replacement: \"[[0]] {$0}$1\", options: \"rmA\", priority: 1},\n    {trigger: \"set\", replacement: \"\\\\{ $0 \\\\}$1\", options: \"mA\"},\n    {trigger: \"seq\", replacement: \"\\\\{ $0 \\\\}_{${1:n} = ${2:1}}^{${3:\\\\infty}}$4\", options: \"mA\"},\n\t{trigger: \"ang\", replacement: \"\\\\langle $0 \\\\rangle$1\", options: \"mA\"},\n    {trigger: \"abs\", replacement: \"|$0|$1\", options: \"mA\"},\n\t{trigger: \"norm\", replacement: \"||$0||$1\", options: \"mA\", priority: 1},\n    {trigger: \"eval\", replacement: \"\\\\left. $0 \\\\right|_{${1:x} = $2}$3\", options: \"mA\"},\n    {trigger: \"subt\", replacement: \"\\\\left. $0 \\\\right|_{${1:a}}^{${2:b}}$3\", options: \"mA\"},\n\t{trigger: \"lr|\", replacement: \"\\\\left| $0 \\\\right| $1\", options: \"mA\"},\n    {trigger: \"lr(\", replacement: \"\\\\left( $0 \\\\right) $1\", options: \"mA\"},\n\t{trigger: \"lr{\", replacement: \"\\\\left\\\\{ $0 \\\\right\\\\} $1\", options: \"mA\"},\n\t{trigger: \"lr[\", replacement: \"\\\\left[ $0 \\\\right] $1\", options: \"mA\"},\n\t{trigger: \"lr<\", replacement: \"\\\\left< $0 \\\\right> $1\", options: \"mA\"},\n\n\t// Derivatives\n\t{trigger: \"par\", replacement: \"\\\\frac{\\\\partial ${0:y}}{\\\\partial ${1:x}}$2\", options: \"m\"},\n\t{trigger: \"pa2\", replacement: \"\\\\frac{\\\\partial^2 ${0:y}}{\\\\partial ${1:x}^2}$2\", options: \"mA\"},\n\t{trigger: \"pa3\", replacement: \"\\\\frac{\\\\partial^3 ${0:y}}{\\\\partial ${1:x}^3}$2\", options: \"mA\"},\n\t{trigger: \"pa([A-Za-z])([A-Za-z])\", replacement: \"\\\\frac{\\\\partial [[0]]}{\\\\partial [[1]]}\", options: \"rm\"},\n\t{trigger: \"pa([A-Za-z])([A-Za-z])([A-Za-z])\", replacement: \"\\\\frac{\\\\partial^2 [[0]]}{\\\\partial [[1]] \\\\partial [[2]]}\", options: \"rm\"},\n\t{trigger: \"pa([A-Za-z])([A-Za-z])2\", replacement: \"\\\\frac{\\\\partial^2 [[0]]}{\\\\partial [[1]]^2}\", options: \"rmA\"},\n\t{trigger: \"de([A-Za-z])\", replacement: \"\\\\frac{\\\\mathrm{d}}{\\\\mathrm{d}[[0]]}\", options: \"rm\", priority: -1},\n\t{trigger: \"de([A-Za-z])([A-Za-z])\", replacement: \"\\\\frac{\\\\mathrm{d}[[0]]}{\\\\mathrm{d}[[1]]}\", options: \"rm\"},\n\t{trigger: \"de([A-Za-z])([A-Za-z])2\", replacement: \"\\\\frac{\\\\mathrm{d}^2[[0]]}{\\\\mathrm{d}[[1]]^2}\", options: \"rmA\"},\n\n\t// Integrals\n\t{trigger: \"infi\", replacement: \"\\\\int_{-\\\\infty}^{\\\\infty} $0 \\\\, \\\\mathrm{d} ${1:x}$2\", options: \"mA\"},\n\t{trigger: \"dint\", replacement: \"\\\\int_{${0:0}}^{${1:\\\\infty}} $2 \\\\, \\\\mathrm{d} ${3:x}$4\", options: \"mA\", priority: 1},\n\t{trigger: \"oint\", replacement: \"\\\\oint\", options: \"mA\"},\n\t{trigger: \"iiint\", replacement: \"\\\\iiint\", options: \"mA\"},\n\t{trigger: \"iint\", replacement: \"\\\\iint\", options: \"mA\"},\n\t{trigger: \"int\", replacement: \"\\\\int $0 \\\\, \\\\mathrm{d} ${1:x}$2\", options: \"mA\"},\n\n\n\t/// Visual operations\n    {trigger: \"O\", replacement: \"\\\\overset{$0}{${VISUAL}}$1\", options: \"mA\"},\n\t{trigger: \"U\", replacement: \"\\\\underbrace{${VISUAL}}_{$0}\", options: \"mA\"},\n\t{trigger: \"B\", replacement: \"\\\\underset{$0}{${VISUAL}}$1\", options: \"mA\"},\n\t{trigger: \"C\", replacement: \"\\\\cancel{${VISUAL}}\", options: \"mA\"},\n\t{trigger: \"K\", replacement: \"\\\\cancelto{$0}{${VISUAL}}$1\", options: \"mA\"},\n\t{trigger: \"S\", replacement: \"\\\\sqrt{${VISUAL}}\", options: \"mA\"},\n\t{trigger: \"(\", replacement: \"(${VISUAL})\", options: \"mA\"},\n    {trigger: \"[\", replacement: \"[${VISUAL}]\", options: \"mA\"},\n\t{trigger: \"{\", replacement: \"{${VISUAL}}\", options: \"mA\"},\n    {trigger: \"|\", replacement: \"|${VISUAL}|\", options: \"mA\"},\n    {trigger: \"A\", replacement: \"\\\\left. ${VISUAL} \\\\right|_{${0:x} = $1}\", options: \"mA\"},\n\n\n\t/// Symbols\n    // Long symbols\n    {trigger: \"(?<!\\\\\\\\)(${SYMBOL})\", replacement: \"\\\\[[0]]\", options: \"rmA\", priority: -1},\n    // Short symbols\n    {trigger: \"(?<!\\\\\\\\)(${SHORT_SYMBOL})\", replacement: \"\\\\[[0]]\", options: \"rm\", priority: -1},\n    // Trig funcs\n    {trigger: \"(?<!\\\\\\\\)(arcsin|arccos|arctan|sin|cos|tan|cot|csc|sec)\", replacement: \"\\\\[[0]]\", options: \"rmA\"},\n    {trigger: \"(arcsec|arccsc|arccot)\", replacement: \"\\\\mathrm{[[0]]}\", options: \"rmA\", priority: 1},\n    \n\t{trigger: \"trace\", replacement: \"\\\\mathrm{Tr}\", options: \"mA\"},\n\t{trigger: \"det\", replacement: \"\\\\det\", options: \"mA\"},\n\t{trigger: \"Re\", replacement: \"\\\\mathrm{Re}\", options: \"mA\"},\n\t{trigger: \"Im\", replacement: \"\\\\mathrm{Im}\", options: \"mA\"},\n\n\t{trigger: \"ooo\", replacement: \"\\\\infty\", options: \"mA\"},\n    // Use backslash to escape snippet\n\t{trigger: \"(?<!\\\\\\\\)sum\", replacement: \"\\\\sum_{ ${0:i} = ${1:1} }^{ ${2:n} } $3\", options: \"rmA\"},\n\t{trigger: \"(?<!\\\\\\\\)prod\", replacement: \"\\\\prod_{ ${0:i} = ${1:1} }^{ ${2:n} } $3\", options: \"rmA\"},\n\t{trigger: \"(?<!\\\\\\\\)lim\", replacement: \"\\\\lim_{ ${0:x} \\\\to ${1:\\\\infty} } $2\", options: \"rmA\"},\n\t{trigger: \"+-\", replacement: \"\\\\pm\", options: \"mA\"},\n\t{trigger: \"-+\", replacement: \"\\\\mp\", options: \"mA\"},\n    // Prevent auto insertion of two asterisks\n\t{trigger: \"*\", replacement: \"*$0\", options: \"mA\"},\n    {trigger: \" ?\\\\*\\\\*\", replacement: \" \\\\cdot\", options: \"rmA\", priority: 2},\n\t{trigger: \"...\", replacement: \"\\\\dots\", options: \"mA\"},\n    {trigger: \"\\\\dots.\", replacement: \"\\\\vdots\", options: \"mA\"},\n\t{trigger: \"<->\", replacement: \"\\\\leftrightarrow \", options: \"mA\"},\n\t{trigger: \"->\", replacement: \"\\\\to\", options: \"mA\"},\n\t{trigger: \"!>\", replacement: \"\\\\mapsto\", options: \"mA\"},\n\t{trigger: \"inv\", replacement: \"^{-1}\", options: \"mA\"},\n\n    // Set\n\t{trigger: \"\\\\\\\\\\\\\", replacement: \"\\\\setminus\", options: \"mA\"},\n\t{trigger: \" ?and\", replacement: \" \\\\cap\", options: \"rmA\"},\n\t{trigger: \" ?orr\", replacement: \" \\\\cup\", options: \"rmA\"},\n    // Insert space before in\n\t{trigger: \" ?in\", replacement: \" \\\\in\", options: \"rm\"},\n\t{trigger: \" ?nin\", replacement: \" \\\\notin\", options: \"rmA\"},\n\t{trigger: \"\\\\subset eq\", replacement: \"\\\\subseteq\", options: \"mA\"},\n\t{trigger: \"eset\", replacement: \"\\\\emptyset\", options: \"mA\"},\n\n    // Logic\n    {trigger: \"trf\", replacement: \"\\\\therefore\", options: \"mA\"},\n\t{trigger: \"=>\", replacement: \"\\\\implies\", options: \"mA\"},\n\t{trigger: \"= <\", replacement: \"\\\\impliedby\", options: \"m\"},\n\t{trigger: \"iff\", replacement: \"\\\\iff\", options: \"mA\"},\n\n    // Comparators\n\t{trigger: \"===\", replacement: \"\\\\equiv\", options: \"mA\"},\n\t{trigger: \"!=\", replacement: \"\\\\ne\", options: \"mA\"},\n\t{trigger: \">=\", replacement: \"\\\\ge\", options: \"mA\"},\n\t{trigger: \"<=\", replacement: \"\\\\le\", options: \"mA\"},\n\t{trigger: \">>\", replacement: \"\\\\gg\", options: \"mA\"},\n\t{trigger: \"<<\", replacement: \"\\\\ll\", options: \"mA\"},\n\t{trigger: \"~~\", replacement: \"\\\\sim\", options: \"mA\"},\n\t{trigger: \"\\\\sim~\", replacement: \"\\\\approx\", options: \"mA\"},\n    {trigger: \"~=\", replacement: \"\\\\simeq\", options: \"mA\"},\n\t{trigger: \"prop\", replacement: \"\\\\propto\", options: \"mA\"},\n\n\t{trigger: \"Sq\", replacement: \"\\\\square\", options: \"mA\"},\n\t{trigger: \"nabl\", replacement: \"\\\\nabla\", options: \"mA\"},\n\t{trigger: \"del\", replacement: \"\\\\nabla\", options: \"mA\"},\n\t{trigger: \" ?xx\", replacement: \" \\\\times\", options: \"rmA\"},\n\t{trigger: \" ?para\", replacement: \" \\\\parallel\", options: \"rmA\"},\n    {trigger: \" ?npar\", replacement: \" \\\\nparallel\", options: \"rmA\"},\n\n    {trigger: \"mbf\", replacement: \"\\\\mathbf{$0}\", options: \"mA\"},\n\t{trigger: \"mcal\", replacement: \"\\\\mathcal{$0}$1\", options: \"mA\"},\n\t{trigger: \"mbb\", replacement: \"\\\\mathbb{$0}$1\", options: \"mA\"},\n\t{trigger: \"lll\", replacement: \"\\\\ell\", options: \"mA\"},\n\t{trigger: \"LL\", replacement: \"\\\\mathcal{L}\", options: \"mA\"},\n\t{trigger: \"HH\", replacement: \"\\\\mathcal{H}\", options: \"mA\"},\n\t{trigger: \"CC\", replacement: \"\\\\mathbb{C}\", options: \"mA\"},\n\t{trigger: \"RR\", replacement: \"\\\\mathbb{R}\", options: \"mA\"},\n\t{trigger: \"ZZ\", replacement: \"\\\\mathbb{Z}\", options: \"mA\"},\n\t{trigger: \"NN\", replacement: \"\\\\mathbb{N}\", options: \"mA\"},\n\t{trigger: \"II\", replacement: \"\\\\mathbb{1}\", options: \"mA\"},\n\t{trigger: \"\\\\mathbb{1}I\", replacement: \"\\\\hat{\\\\mathbb{1}}\", options: \"mA\"},\n\t{trigger: \"AA\", replacement: \"\\\\mathcal{A}\", options: \"mA\"},\n\t{trigger: \"BB\", replacement: \"\\\\mathbf{B}\", options: \"mA\"},\n\t{trigger: \"EE\", replacement: \"\\\\mathbf{E}\", options: \"mA\"},\n\n\t// Greek letters\n\t{trigger: \"@a\", replacement: \"\\\\alpha\", options: \"mA\"},\n\t{trigger: \"@A\", replacement: \"\\\\alpha\", options: \"mA\"},\n\t{trigger: \"@b\", replacement: \"\\\\beta\", options: \"mA\"},\n\t{trigger: \"@B\", replacement: \"\\\\beta\", options: \"mA\"},\n\t{trigger: \"@c\", replacement: \"\\\\chi\", options: \"mA\"},\n\t{trigger: \"@C\", replacement: \"\\\\chi\", options: \"mA\"},\n\t{trigger: \"@g\", replacement: \"\\\\gamma\", options: \"mA\"},\n\t{trigger: \"@G\", replacement: \"\\\\Gamma\", options: \"mA\"},\n\t{trigger: \"@d\", replacement: \"\\\\delta\", options: \"mA\"},\n\t{trigger: \"@D\", replacement: \"\\\\Delta\", options: \"mA\"},\n\t{trigger: \"@e\", replacement: \"\\\\epsilon\", options: \"mA\"},\n\t{trigger: \"@E\", replacement: \"\\\\epsilon\", options: \"mA\"},\n\t{trigger: \":e\", replacement: \"\\\\varepsilon\", options: \"mA\"},\n\t{trigger: \":E\", replacement: \"\\\\varepsilon\", options: \"mA\"},\n\t{trigger: \"@z\", replacement: \"\\\\zeta\", options: \"mA\"},\n\t{trigger: \"@Z\", replacement: \"\\\\zeta\", options: \"mA\"},\n    {trigger: \"eta\", replacement: \"\\\\eta\", options: \"mA\"},\n\t{trigger: \"@t\", replacement: \"\\\\theta\", options: \"mA\"},\n\t{trigger: \"@T\", replacement: \"\\\\Theta\", options: \"mA\"},\n\t{trigger: \"@k\", replacement: \"\\\\kappa\", options: \"mA\"},\n\t{trigger: \"@K\", replacement: \"\\\\kappa\", options: \"mA\"},\n\t{trigger: \"@l\", replacement: \"\\\\lambda\", options: \"mA\"},\n\t{trigger: \"@L\", replacement: \"\\\\Lambda\", options: \"mA\"},\n\t{trigger: \"@m\", replacement: \"\\\\mu\", options: \"mA\"},\n\t{trigger: \"@M\", replacement: \"\\\\mu\", options: \"mA\"},\n\t{trigger: \"@r\", replacement: \"\\\\rho\", options: \"mA\"},\n\t{trigger: \"@R\", replacement: \"\\\\rho\", options: \"mA\"},\n\t{trigger: \"@s\", replacement: \"\\\\sigma\", options: \"mA\"},\n\t{trigger: \"@S\", replacement: \"\\\\Sigma\", options: \"mA\"},\n\t{trigger: \"@o\", replacement: \"\\\\omega\", options: \"mA\"},\n\t{trigger: \"@O\", replacement: \"\\\\Omega\", options: \"mA\"},\n    {trigger: \"pi\", replacement: \"\\\\pi\", options: \"mA\"},\n    {trigger: \"tau\", replacement: \"\\\\tau\", options: \"mA\"},\n\t{trigger: \"@u\", replacement: \"\\\\upsilon\", options: \"mA\"},\n\t{trigger: \"@U\", replacement: \"\\\\Upsilon\", options: \"mA\"},\n\n\t// Physics\n\t{trigger: \"kbt\", replacement: \"k_BT\", options: \"mA\"},\n\n\n\t/// Quantum mechanics\n\t{trigger: \"hba\", replacement: \"\\\\hbar\", options: \"mA\"},\n\t{trigger: \"dag\", replacement: \"^{\\\\dagger}\", options: \"mA\"},\n\t{trigger: \"o+\", replacement: \"\\\\oplus \", options: \"mA\"},\n\t{trigger: \"ox\", replacement: \"\\\\otimes \", options: \"mA\"},\n\t{trigger: \"bra\", replacement: \"\\\\bra{$0} $1\", options: \"mA\"},\n\t{trigger: \"ket\", replacement: \"\\\\ket{$0} $1\", options: \"mA\"},\n\t{trigger: \"brk\", replacement: \"\\\\braket{ $0 | $1 } $2\", options: \"mA\"},\n\t{trigger: \"\\\\\\\\bra{([^|]+)\\\\|\", replacement: \"\\\\braket{ [[0]] | $0 \", options: \"rmA\", description: \"Convert bra into braket\"},\n\t{trigger: \"\\\\\\\\bra{(.+)}([^ ]+)>\", replacement: \"\\\\braket{ [[0]] | $0 \", options: \"rmA\", description: \"Convert bra into braket (alternate)\"},\n\t{trigger: \"outp\", replacement: \"\\\\ket{${0:\\\\psi}} \\\\bra{${0:\\\\psi}} $1\", options: \"mA\"},\n\n\n\t/// Chemistry\n\t{trigger: \"pu\", replacement: \"\\\\pu{$0}$1\", options: \"mA\"},\n\t{trigger: \"msun\", replacement: \"M_{\\\\odot}\", options: \"mA\"},\n\t{trigger: \"solm\", replacement: \"M_{\\\\odot}\", options: \"mA\"},\n\t{trigger: \"ce\", replacement: \"\\\\ce{$0}$1\", options: \"mA\"},\n\t{trigger: \"iso\", replacement: \"{}^{${0:4}}_{${1:2}}${2:He}\", options: \"mA\"},\n\t{trigger: \"hel4\", replacement: \"{}^{4}_{2}He \", options: \"mA\"},\n\t{trigger: \"hel3\", replacement: \"{}^{3}_{2}He \", options: \"mA\"},\n\n\n\t/// Misc\n\t{trigger: \"tayl\", replacement: \"${0:f}(${1:x} + ${2:h}) = ${0:f}(${1:x}) + ${0:f}'(${1:x})${2:h} + ${0:f}''(${1:x}) \\\\frac{${2:h}^{2}}{2!} + \\\\dots$3\", options: \"mA\"},\n]",
  "snippetVariables": "{\n\t\"${GREEK}\": \"alpha|beta|gamma|Gamma|delta|Delta|epsilon|varepsilon|zeta|eta|theta|Theta|iota|kappa|lambda|Lambda|mu|nu|omicron|xi|Xi|pi|Pi|rho|sigma|Sigma|tau|upsilon|Upsilon|varphi|phi|Phi|chi|psi|Psi|omega|Omega\",\n\t\"${SYMBOL}\": \"hbar|ell|nabla|infty|dots|leftrightarrow|mapsto|setminus|mid|bigcap|bigcup|cap|cup|land|lor|subseteq|subset|implies|impliedby|iff|exists|forall|equiv|square|sim|simeq|approx|propto|cdot|oplus|otimes|times|star|parallel|nparallel|perp|det|exp|log|partial|circ|emptyset|sum|prod|lim|langle|rangle\",\n\t\"${SHORT_SYMBOL}\": \"ll|lt|le|ne|ge|gt|gg|in|to|pm|mp|ln\",\n\t\"${SUBSCRIPTABLE}\": \"square|infty|exp|log\",\n\t\"${COMPARE}\": \"[<=>]|\\\\\\\\(?=ll|lt|le|ne|ge|gt|gg|equiv|sim|simeq|approx|in|notin|subset|subseteq|propto)\"\n}",
  "snippetsEnabled": true,
  "snippetsTrigger": " ",
  "suppressSnippetTriggerOnIME": true,
  "removeSnippetWhitespace": true,
  "autoDelete$": true,
  "loadSnippetsFromFile": false,
  "loadSnippetVariablesFromFile": false,
  "snippetsFileLocation": "",
  "snippetVariablesFileLocation": "",
  "concealEnabled": true,
  "concealRevealTimeout": 20,
  "colorPairedBracketsEnabled": true,
  "highlightCursorBracketsEnabled": true,
  "mathPreviewEnabled": true,
  "mathPreviewPositionIsAbove": true,
  "autofractionEnabled": true,
  "autofractionSymbol": "\\frac",
  "autofractionBreakingChars": "+-=\t",
  "matrixShortcutsEnabled": true,
  "taboutEnabled": true,
  "autoEnlargeBrackets": true,
  "wordDelimiters": "., +-\\n\t:;!?\\/{}[]()=~$",
  "autofractionExcludedEnvs": "[\n\t[\"\\\\pu{\", \"}\"],\n]",
  "matrixShortcutsEnvNames": "pmatrix, cases, align, bmatrix, Bmatrix, vmatrix, Vmatrix, array, matrix",
  "autoEnlargeBracketsTriggers": "sum, int, frac, prod, bigcup, bigcap",
  "forceMathLanguages": "math"
}